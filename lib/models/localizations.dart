import 'package:flutter/material.dart';
import 'dart:async';
import 'package:flutter/foundation.dart' show SynchronousFuture;

class MyLocalizations {
  final Locale locale;

  MyLocalizations(this.locale);

  static Map<String, Map<String, String>> _localValues = {
    'en': {
      'IMAGE_SAVED_INFO': 'Image Saved to Album',

      'UNDO': 'Undo',
      'LAST_COLOR': 'Last Color',
      'CANCEL': 'Cancel',

      'GENERATE_PIC': 'üì≤ Generate Pictures',
      'ALL_COLOR': 'üåà All Colors',
      'MARK_FAVORITE': 'üåü Mark Favorite',
      'CANCEL_FAVORITE': 'üò™ Cancel Favorite',
      'MY_FAVORITE': 'üí´ My Favorites',
      'USE_TIPS': '‚ùì Use Tips',
      'BACK': 'Back',

      'TIPS_TITLE': 'Use Tips',
      'TIP_1': 'Click color\'s name to display all colors',
      'TIP_2': '"Shake the device" to undo when you touch the screen by mistake',
      'TIP_3': 'Long press Hex value to copy it',
      'OK': 'OK',

      'SHARE': 'Share Image',

      'COPY': 'Has been copied!',
    },
    'zh': {
      'IMAGE_SAVED_INFO': 'ÂõæÁâáÂ∑≤‰øùÂ≠òÂà∞Áõ∏ÂÜå',

      'UNDO': 'Êí§ÈîÄÊìç‰Ωú',
      'LAST_COLOR': '‰∏ä‰∏Ä‰∏™È¢úËâ≤',
      'CANCEL': 'ÂèñÊ∂à',

      'GENERATE_PIC': 'üì≤ ÁîüÊàêÂõæÁâá',
      'ALL_COLOR': 'üåà ÊâÄÊúâÈ¢úËâ≤',
      'MARK_FAVORITE': 'üåü Ê†áËÆ∞ÂñúÊ¨¢',
      'CANCEL_FAVORITE': 'üò™ ÂèñÊ∂àÂñúÊ¨¢',
      'MY_FAVORITE': 'üí´ ÊàëÂñúÊ¨¢ÁöÑ',
      'USE_TIPS': '‚ùì ‰ΩøÁî®ÊèêÁ§∫',
      'BACK': 'ËøîÂõû',

      'TIPS_TITLE': '‰ΩøÁî®ÊèêÁ§∫',
      'TIP_1': 'È¶ñÈ°µÁÇπÂáªÈ¢úËâ≤ÂêçÁß∞ÔºåÊòæÁ§∫ÊâÄÊúâÈ¢úËâ≤',
      'TIP_2': 'ËØØÁÇπÂ±èÂπïÊó∂Ôºå‚ÄúÊëá‰∏ÄÊëáËÆæÂ§á‚ÄùÊí§ÈîÄÊìç‰Ωú',
      'TIP_3': 'ÈïøÊåâÂçÅÂÖ≠ËøõÂà∂ÂÄºÂèØÂ§çÂà∂',
      'OK': 'Â•ΩÁöÑ',

      'SHARE': 'ÂàÜ‰∫´ÂõæÁâá',

      'COPY': 'Â∑≤Â§çÂà∂',
    },
  };
  // ‰øùÂ≠òÂõæÁâáBottomsheet
  get savedInfoStr => _localValues[locale.languageCode]['IMAGE_SAVED_INFO'];

  // Êí§ÈîÄDialog
  get undoTitleStr => _localValues[locale.languageCode]['UNDO'];
  get lastColorStr => _localValues[locale.languageCode]['LAST_COLOR'];
  get cancelStr => _localValues[locale.languageCode]['CANCEL'];
  
  // ÁÇπÂáªÊ†ëÊûùDialog
  get generatePicStr => _localValues[locale.languageCode]['GENERATE_PIC'];
  get allColorStr => _localValues[locale.languageCode]['ALL_COLOR'];
  get markFavoriteStr => _localValues[locale.languageCode]['MARK_FAVORITE'];
  get cancelFavoriteStr => _localValues[locale.languageCode]['CANCEL_FAVORITE'];
  get myFavoriteStr => _localValues[locale.languageCode]['MY_FAVORITE'];
  get getUseTipsStr => _localValues[locale.languageCode]['USE_TIPS'];
  get backStr =>  _localValues[locale.languageCode]['BACK'];

  // ‰ΩøÁî®ÊèêÁ§∫Dialog
  get tipsTitleStr => _localValues[locale.languageCode]['TIPS_TITLE'];
  get tipStr1 => _localValues[locale.languageCode]['TIP_1'];
  get tipStr2 => _localValues[locale.languageCode]['TIP_2'];
  get tipStr3 => _localValues[locale.languageCode]['TIP_3'];
  get okStr => _localValues[locale.languageCode]['OK'];

  // ÂàÜ‰∫´
  get shareStr => _localValues[locale.languageCode]['SHARE'];

  // Â∑≤Â§çÂà∂
  get copyStr => _localValues[locale.languageCode]['COPY'];

  static MyLocalizations of(BuildContext context) {
    return Localizations.of(context, MyLocalizations);
  }
}

class MyLocalDelegate extends LocalizationsDelegate<MyLocalizations> {
  const MyLocalDelegate();

  @override
  bool isSupported(Locale locale) {
    return ['en', 'zh'].contains(locale.languageCode);
  }

  // ÂàùÂßãÂåñ
  @override
  Future<MyLocalizations> load(Locale locale) {
    return SynchronousFuture<MyLocalizations>(MyLocalizations(locale));
  }

  @override
  bool shouldReload(LocalizationsDelegate<MyLocalizations> old) {
    return false;
  }

  static MyLocalDelegate delegate = const MyLocalDelegate();
}